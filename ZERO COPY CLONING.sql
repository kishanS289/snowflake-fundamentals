SHOW DATABASES;

CREATE OR REPLACE DATABASE CLONED_SNOWFLAKE_PRACTICE
CLONE SNOWFLAKE_PRACTICE;


USE DATABASE CLONED_SNOWFLAKE_PRACTICE;

USE SCHEMA KISHAN_DB;

SHOW TABLES;

--CLONING DOESN'T CLONE INTERNAL STAGES AND EXTERNAL TABLES

SHOW TABLES;

CREATE OR REPLACE TABLE CLONED_EMPLOYEE
CLONE EMPLOYEE;

SELECT * FROM CLONED_EMPLOYEE;

SELECT * FROM EMPLOYEE;

SELECT * FROM INFORMATION_SCHEMA.TABLE_STORAGE_METRICS WHERE TABLE_CATALOG = 'SNOWFLAKE_PRACTICE';

--IF USER MAKES ANY DML ON CLONED ASSESTS SNOWFLAKE WILL CHARGE.

INSERT INTO CLONED_EMPLOYEE
VALUES(1500,'MICHAEL','FOXRIVER',12344213,'2023-11-11');

ALTER TABLE CLONED_EMPLOYEE
ADD AGE INT DEFAULT 50;

--TIME TRAVEL + COPY CLONE
CREATE OR REPLACE TABLE EMPLOYEE_INITIAL CLONE CLONED_EMPLOYEE AT (OFFSET => -60*20);

SELECT * FROM EMPLOYEE_INITIAL;

SELECT * FROM CLONED_EMPLOYEE;

ALTER TABLE CLONED_EMPLOYEE
SWAP WITH  EMPLOYEE_INITIAL;


--TIME TRAVEL

--IF I HAVE CUSTOMER TABLE WITH 100 COLUMNS OF 1M RECORDS
--BY MISTAKE CREATED ANOTHER CUSTOMER TABLE WITH 10 COLUMNS THEN HOW TO REACH TO PREVIOUS TABLE


SELECT * FROM CLONED_EMPLOYEE;

CREATE OR REPLACE TABLE CLONED_EMPLOYEE(Id INT,Name varchar(50));

SELECT * FROM CLONED_EMPLOYEE AT (OFFSET => -60);
--Time travel data is not available for table CLONED_EMPLOYEE. The requested time is either beyond the allowed time travel period or before the object creation time.

ALTER TABLE CLONED_EMPLOYEE
RENAME TO OLD_CLONED_EMPLOYEE;

UNDROP TABLE CLONED_EMPLOYEE;

SELECT * FROM CLONED_EMPLOYEE;






